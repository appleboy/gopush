eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIHBhdGg6IC9nby9zcmMvZ2l0aHViLmNvbS9hcHBsZWJveS9nb3J1c2gKCnBpcGVsaW5lOgogICMgcmVzdG9yZSB0aGUgY2FjaGUgZnJvbSBhbiBzZnRwIHNlcnZlcgogIHJlc3RvcmVfY2FjaGU6CiAgICBpbWFnZTogYXBwbGVib3kvZHJvbmUtc2Z0cC1jYWNoZQogICAgcmVzdG9yZTogdHJ1ZQogICAgbW91bnQ6IFsgLmdsaWRlLCB2ZW5kb3IgXQogICAgaWdub3JlX2JyYW5jaDogdHJ1ZQoKICBidWlsZDoKICAgIGltYWdlOiBhcHBsZWJveS9nb2xhbmctdGVzdGluZzoke0dPX1ZFUlNJT059CiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBHT1BBVEg9L2dvCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIGRlcF9pbnN0YWxsCiAgICAgIC0gbWFrZSB2ZXQKICAgICAgLSBtYWtlIGxpbnQKICAgICAgLSBtYWtlIGJ1aWxkCiAgICAgIC0gY292ZXJhZ2UgYWxsCiAgICAgIC0gY3VybCAtcyBodHRwczovL2NvZGVjb3YuaW8vYmFzaCA-IC5jb2RlY292CiAgICAgIC0gY2htb2QgK3ggLmNvZGVjb3YgJiYgLi8uY29kZWNvdiAtdCAke0NPREVDT1ZfVE9LRU59CiAgICAgICMgYnVpbGQgYmluYXJ5IGZvciBkb2NrZXIgaW1hZ2UKICAgICAgLSBtYWtlIGRvY2tlcl9iaW5hcnlfYnVpbGQKCiAgZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBhcHBsZWJveS9nb3J1c2gKICAgIHRhZ3M6IFsgJyR7RFJPTkVfVEFHfScgXQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KCiAgZG9ja2VyOgogICAgaW1hZ2U6IHBsdWdpbnMvZG9ja2VyCiAgICByZXBvOiBhcHBsZWJveS9nb3J1c2gKICAgIHRhZ3M6IFsgJ2xhdGVzdCcgXQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIgXQoKICBmYWNlYm9vazoKICAgIGltYWdlOiBhcHBsZWJveS9kcm9uZS1mYWNlYm9vawogICAgcHVsbDogdHJ1ZQogICAgdG86IDEyMzQ5NzMzODY1MjQ2MTAKICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBmYWlsdXJlIF0KICAgICAgbWF0cml4OgogICAgICAgIEdPX1ZFUlNJT046IDEuNy40CgogICMgcmVidWlsZCB0aGUgY2FjaGUgb24gdGhlIHNmdHAgc2VydmVyCiAgcmVidWlsZF9jYWNoZToKICAgIGltYWdlOiBhcHBsZWJveS9kcm9uZS1zZnRwLWNhY2hlCiAgICByZWJ1aWxkOiB0cnVlCiAgICBtb3VudDogWyAuZ2xpZGUsIHZlbmRvciBdCiAgICBpZ25vcmVfYnJhbmNoOiB0cnVlCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBtYXRyaXg6CiAgICAgICAgR09fVkVSU0lPTjogMS43LjQKCnNlcnZpY2VzOgogIHJlZGlzOgogICAgaW1hZ2U6IHJlZGlzOmFscGluZQoKbWF0cml4OgogIEdPX1ZFUlNJT046CiAgICAtIDEuNy40CiAgICAtIDEuNi40Cg.JfPeiFyiQ_kT-A7GvP-9yuDR4CqqwwS5Od6WJA07U8A