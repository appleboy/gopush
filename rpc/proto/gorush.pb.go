// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gorush.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	gorush.proto

It has these top-level messages:
	Alert
	NotificationRequest
	NotificationReply
	HealthCheckRequest
	HealthCheckResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto1.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

type Alert struct {
	Title        string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Body         string   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Subtitle     string   `protobuf:"bytes,3,opt,name=subtitle" json:"subtitle,omitempty"`
	Action       string   `protobuf:"bytes,4,opt,name=action" json:"action,omitempty"`
	ActionLocKey string   `protobuf:"bytes,5,opt,name=actionLocKey" json:"actionLocKey,omitempty"`
	LaunchImage  string   `protobuf:"bytes,6,opt,name=launchImage" json:"launchImage,omitempty"`
	LocKey       string   `protobuf:"bytes,7,opt,name=locKey" json:"locKey,omitempty"`
	TitleLocKey  string   `protobuf:"bytes,8,opt,name=titleLocKey" json:"titleLocKey,omitempty"`
	LocArgs      []string `protobuf:"bytes,9,rep,name=locArgs" json:"locArgs,omitempty"`
	TitleLocArgs []string `protobuf:"bytes,10,rep,name=titleLocArgs" json:"titleLocArgs,omitempty"`
}

func (m *Alert) Reset()                    { *m = Alert{} }
func (m *Alert) String() string            { return proto1.CompactTextString(m) }
func (*Alert) ProtoMessage()               {}
func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Alert) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Alert) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Alert) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *Alert) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Alert) GetActionLocKey() string {
	if m != nil {
		return m.ActionLocKey
	}
	return ""
}

func (m *Alert) GetLaunchImage() string {
	if m != nil {
		return m.LaunchImage
	}
	return ""
}

func (m *Alert) GetLocKey() string {
	if m != nil {
		return m.LocKey
	}
	return ""
}

func (m *Alert) GetTitleLocKey() string {
	if m != nil {
		return m.TitleLocKey
	}
	return ""
}

func (m *Alert) GetLocArgs() []string {
	if m != nil {
		return m.LocArgs
	}
	return nil
}

func (m *Alert) GetTitleLocArgs() []string {
	if m != nil {
		return m.TitleLocArgs
	}
	return nil
}

type NotificationRequest struct {
	Tokens           []string `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
	Platform         int32    `protobuf:"varint,2,opt,name=platform" json:"platform,omitempty"`
	Message          string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Title            string   `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Topic            string   `protobuf:"bytes,5,opt,name=topic" json:"topic,omitempty"`
	Key              string   `protobuf:"bytes,6,opt,name=key" json:"key,omitempty"`
	Badge            int32    `protobuf:"varint,7,opt,name=badge" json:"badge,omitempty"`
	Category         string   `protobuf:"bytes,8,opt,name=category" json:"category,omitempty"`
	Alert            *Alert   `protobuf:"bytes,9,opt,name=alert" json:"alert,omitempty"`
	Sound            string   `protobuf:"bytes,10,opt,name=sound" json:"sound,omitempty"`
	ContentAvailable bool     `protobuf:"varint,11,opt,name=contentAvailable" json:"contentAvailable,omitempty"`
	ThreadID         string   `protobuf:"bytes,12,opt,name=threadID" json:"threadID,omitempty"`
}

func (m *NotificationRequest) Reset()                    { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string            { return proto1.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()               {}
func (*NotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NotificationRequest) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func (m *NotificationRequest) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *NotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *NotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NotificationRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *NotificationRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NotificationRequest) GetBadge() int32 {
	if m != nil {
		return m.Badge
	}
	return 0
}

func (m *NotificationRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *NotificationRequest) GetAlert() *Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

func (m *NotificationRequest) GetSound() string {
	if m != nil {
		return m.Sound
	}
	return ""
}

func (m *NotificationRequest) GetContentAvailable() bool {
	if m != nil {
		return m.ContentAvailable
	}
	return false
}

func (m *NotificationRequest) GetThreadID() string {
	if m != nil {
		return m.ThreadID
	}
	return ""
}

type NotificationReply struct {
	Success bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Counts  int32 `protobuf:"varint,2,opt,name=counts" json:"counts,omitempty"`
}

func (m *NotificationReply) Reset()                    { *m = NotificationReply{} }
func (m *NotificationReply) String() string            { return proto1.CompactTextString(m) }
func (*NotificationReply) ProtoMessage()               {}
func (*NotificationReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NotificationReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *NotificationReply) GetCounts() int32 {
	if m != nil {
		return m.Counts
	}
	return 0
}

type HealthCheckRequest struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *HealthCheckRequest) Reset()                    { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string            { return proto1.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()               {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,enum=proto.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (m *HealthCheckResponse) Reset()                    { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string            { return proto1.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()               {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func init() {
	proto1.RegisterType((*Alert)(nil), "proto.Alert")
	proto1.RegisterType((*NotificationRequest)(nil), "proto.NotificationRequest")
	proto1.RegisterType((*NotificationReply)(nil), "proto.NotificationReply")
	proto1.RegisterType((*HealthCheckRequest)(nil), "proto.HealthCheckRequest")
	proto1.RegisterType((*HealthCheckResponse)(nil), "proto.HealthCheckResponse")
	proto1.RegisterEnum("proto.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Gorush service

type GorushClient interface {
	Send(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationReply, error)
}

type gorushClient struct {
	cc *grpc.ClientConn
}

func NewGorushClient(cc *grpc.ClientConn) GorushClient {
	return &gorushClient{cc}
}

func (c *gorushClient) Send(ctx context.Context, in *NotificationRequest, opts ...grpc.CallOption) (*NotificationReply, error) {
	out := new(NotificationReply)
	err := grpc.Invoke(ctx, "/proto.Gorush/Send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gorush service

type GorushServer interface {
	Send(context.Context, *NotificationRequest) (*NotificationReply, error)
}

func RegisterGorushServer(s *grpc.Server, srv GorushServer) {
	s.RegisterService(&_Gorush_serviceDesc, srv)
}

func _Gorush_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GorushServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Gorush/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GorushServer).Send(ctx, req.(*NotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gorush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Gorush",
	HandlerType: (*GorushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Gorush_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gorush.proto",
}

// Client API for Health service

type HealthClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type healthClient struct {
	cc *grpc.ClientConn
}

func NewHealthClient(cc *grpc.ClientConn) HealthClient {
	return &healthClient{cc}
}

func (c *healthClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := grpc.Invoke(ctx, "/proto.Health/Check", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Health service

type HealthServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
}

func RegisterHealthServer(s *grpc.Server, srv HealthServer) {
	s.RegisterService(&_Health_serviceDesc, srv)
}

func _Health_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Health/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Health_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Health",
	HandlerType: (*HealthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Health_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gorush.proto",
}

func init() { proto1.RegisterFile("gorush.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcb, 0x8e, 0xda, 0x30,
	0x14, 0x9d, 0x00, 0xe1, 0x71, 0xa1, 0x2d, 0xf5, 0x54, 0x95, 0xcb, 0x0a, 0x65, 0x85, 0xba, 0x60,
	0x41, 0x77, 0x5d, 0x8c, 0x8a, 0xda, 0xd1, 0x0c, 0x9a, 0x2a, 0x23, 0x85, 0x3e, 0x96, 0x95, 0x31,
	0x9e, 0x10, 0x61, 0xe2, 0x34, 0x76, 0x46, 0xe2, 0x3b, 0xfa, 0x09, 0xfd, 0xa6, 0xfe, 0x4f, 0xe5,
	0xeb, 0x98, 0x82, 0xca, 0xac, 0xe2, 0x73, 0xee, 0xc3, 0xc7, 0xe7, 0xde, 0xc0, 0x20, 0x55, 0x65,
	0xa5, 0x37, 0xd3, 0xa2, 0x54, 0x46, 0x91, 0x10, 0x3f, 0xd1, 0xef, 0x06, 0x84, 0x73, 0x29, 0x4a,
	0x43, 0x5e, 0x41, 0x68, 0x32, 0x23, 0x05, 0x0d, 0xc6, 0xc1, 0xa4, 0x97, 0x38, 0x40, 0x08, 0xb4,
	0x56, 0x6a, 0xbd, 0xa7, 0x0d, 0x24, 0xf1, 0x4c, 0x46, 0xd0, 0xd5, 0xd5, 0xca, 0x25, 0x37, 0x91,
	0x3f, 0x60, 0xf2, 0x1a, 0xda, 0x8c, 0x9b, 0x4c, 0xe5, 0xb4, 0x85, 0x91, 0x1a, 0x91, 0x08, 0x06,
	0xee, 0xf4, 0x59, 0xf1, 0x3b, 0xb1, 0xa7, 0x21, 0x46, 0x4f, 0x38, 0x32, 0x86, 0xbe, 0x64, 0x55,
	0xce, 0x37, 0x8b, 0x1d, 0x4b, 0x05, 0x6d, 0x63, 0xca, 0x31, 0x65, 0xbb, 0x4b, 0x57, 0xdf, 0x71,
	0xdd, 0xe5, 0xa1, 0x12, 0xaf, 0xaf, 0x9b, 0x77, 0x5d, 0xe5, 0x11, 0x45, 0x28, 0x74, 0xa4, 0xe2,
	0xf3, 0x32, 0xd5, 0xb4, 0x37, 0x6e, 0x4e, 0x7a, 0x89, 0x87, 0x56, 0x99, 0x4f, 0xc4, 0x30, 0x60,
	0xf8, 0x84, 0x8b, 0xfe, 0x34, 0xe0, 0x32, 0x56, 0x26, 0x7b, 0xc8, 0x38, 0xb3, 0x82, 0x13, 0xf1,
	0xb3, 0x12, 0xda, 0x58, 0x3d, 0x46, 0x6d, 0x45, 0xae, 0x69, 0x80, 0x55, 0x35, 0xb2, 0x0e, 0x15,
	0x92, 0x99, 0x07, 0x55, 0xee, 0xd0, 0xb9, 0x30, 0x39, 0x60, 0xab, 0x64, 0x27, 0xb4, 0xb6, 0x2f,
	0x74, 0xe6, 0x79, 0xf8, 0x6f, 0x02, 0xad, 0xe3, 0x09, 0x58, 0x56, 0x15, 0x19, 0xaf, 0x2d, 0x73,
	0x80, 0x0c, 0xa1, 0xb9, 0x15, 0xfb, 0xda, 0x23, 0x7b, 0xb4, 0x79, 0x2b, 0xb6, 0x4e, 0x05, 0x5a,
	0x13, 0x26, 0x0e, 0x58, 0x25, 0x9c, 0x19, 0x91, 0xaa, 0xd2, 0xdb, 0x72, 0xc0, 0x24, 0x82, 0x90,
	0xd9, 0xd1, 0xd3, 0xde, 0x38, 0x98, 0xf4, 0x67, 0x03, 0xb7, 0x19, 0x53, 0x5c, 0x87, 0xc4, 0x85,
	0x6c, 0x57, 0xad, 0xaa, 0x7c, 0x4d, 0xc1, 0xdd, 0x8e, 0x80, 0xbc, 0x85, 0x21, 0x57, 0xb9, 0x11,
	0xb9, 0x99, 0x3f, 0xb2, 0x4c, 0xb2, 0x95, 0x14, 0xb4, 0x3f, 0x0e, 0x26, 0xdd, 0xe4, 0x3f, 0xde,
	0x2a, 0x30, 0x9b, 0x52, 0xb0, 0xf5, 0xe2, 0x13, 0x1d, 0x38, 0x05, 0x1e, 0x47, 0xd7, 0xf0, 0xf2,
	0xd4, 0xd6, 0x42, 0xe2, 0xa8, 0x74, 0xc5, 0xb9, 0xd0, 0x1a, 0x57, 0xb1, 0x9b, 0x78, 0x68, 0xed,
	0xe6, 0xaa, 0xca, 0x8d, 0xae, 0x4d, 0xad, 0x51, 0x34, 0x05, 0x72, 0x2b, 0x98, 0x34, 0x9b, 0x8f,
	0x1b, 0xc1, 0xb7, 0x7e, 0x38, 0xb6, 0x8f, 0x28, 0x1f, 0x33, 0xee, 0x57, 0xda, 0xc3, 0xe8, 0x57,
	0x00, 0x97, 0x27, 0x05, 0xba, 0x50, 0xb9, 0x16, 0xe4, 0x03, 0xb4, 0xb5, 0x61, 0xa6, 0x72, 0x17,
	0x3f, 0x9f, 0x4d, 0x6a, 0x47, 0xce, 0xe4, 0x4e, 0x97, 0xb6, 0x57, 0x9e, 0x2e, 0x31, 0x3f, 0xa9,
	0xeb, 0xa2, 0xf7, 0xf0, 0xec, 0x24, 0x40, 0xfa, 0xd0, 0xf9, 0x1a, 0xdf, 0xc5, 0xf7, 0xdf, 0xe3,
	0xe1, 0x85, 0x05, 0xcb, 0xeb, 0xe4, 0xdb, 0x22, 0xbe, 0x19, 0x06, 0xe4, 0x05, 0xf4, 0xe3, 0xfb,
	0x2f, 0x3f, 0x3c, 0xd1, 0x98, 0xdd, 0x42, 0xfb, 0x06, 0xff, 0x50, 0x72, 0x05, 0xad, 0xa5, 0xc8,
	0xd7, 0x64, 0x54, 0xdf, 0x7f, 0x66, 0xf5, 0x46, 0xf4, 0x6c, 0xac, 0x90, 0xfb, 0xe8, 0xc2, 0x76,
	0x72, 0x92, 0xc9, 0x15, 0x84, 0x28, 0x9b, 0xbc, 0x39, 0xf7, 0x14, 0xd7, 0x69, 0xf4, 0xf4, 0x2b,
	0x57, 0x6d, 0x0c, 0xbd, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xce, 0xb3, 0x89, 0xca, 0x3c, 0x04,
	0x00, 0x00,
}
